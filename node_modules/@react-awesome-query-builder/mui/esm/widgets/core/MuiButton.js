import React from "react";
import DeleteIcon from "@mui/icons-material/Delete";
import AddIcon from "@mui/icons-material/Add";
import Button from "@mui/material/Button";
import IconButton from "@mui/material/IconButton";
export default (function (_ref) {
  var type = _ref.type,
    label = _ref.label,
    onClick = _ref.onClick,
    readonly = _ref.readonly,
    config = _ref.config;
  var hideLabelsFor = {
    "addRuleGroup": true,
    "addRuleGroupExt": true
  };
  var typeToIcon = {
    "delGroup": /*#__PURE__*/React.createElement(DeleteIcon, null),
    "delRuleGroup": /*#__PURE__*/React.createElement(DeleteIcon, null),
    "delRule": /*#__PURE__*/React.createElement(DeleteIcon, null),
    "addRule": /*#__PURE__*/React.createElement(AddIcon, null),
    "addGroup": /*#__PURE__*/React.createElement(AddIcon, null),
    "addRuleGroupExt": /*#__PURE__*/React.createElement(AddIcon, null),
    "addRuleGroup": /*#__PURE__*/React.createElement(AddIcon, null)
  };
  var typeToColor = {
    "addRule": "neutral",
    "addGroup": "primary",
    "delGroup": "secondary",
    "delRuleGroup": "secondary",
    "delRule": "secondary"
  };
  if (!label || hideLabelsFor[type]) {
    return /*#__PURE__*/React.createElement(IconButton, {
      size: "small",
      disabled: readonly,
      onClick: onClick,
      color: typeToColor[type]
    }, typeToIcon[type]);
  } else {
    return /*#__PURE__*/React.createElement(Button, {
      size: "small",
      disabled: readonly,
      onClick: onClick,
      color: typeToColor[type],
      startIcon: typeToIcon[type]
    }, label);
  }
});