import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from "react";
import IconButton from "@mui/material/IconButton";
import ExpandMoreSharpIcon from "@mui/icons-material/ExpandMoreSharp";
import Popover from "@mui/material/Popover";
import Radio from "@mui/material/Radio";
import RadioGroup from "@mui/material/RadioGroup";
import FormControlLabel from "@mui/material/FormControlLabel";
import FormControl from "@mui/material/FormControl";
import FormLabel from "@mui/material/FormLabel";
export default (function (_ref) {
  var valueSources = _ref.valueSources,
    valueSrc = _ref.valueSrc,
    title = _ref.title,
    setValueSrc = _ref.setValueSrc,
    readonly = _ref.readonly;
  var _React$useState = React.useState(null),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    anchorEl = _React$useState2[0],
    setAnchorEl = _React$useState2[1];
  var handleOpen = function handleOpen(event) {
    setAnchorEl(event.currentTarget);
  };
  var handleClose = function handleClose() {
    setAnchorEl(null);
  };
  var toggleOpenClose = function toggleOpenClose(event) {
    anchorEl ? handleClose() : handleOpen(event);
  };
  var handleChange = function handleChange(e) {
    if (e.target.value === undefined) return;
    setValueSrc(e.target.value);
    handleClose();
  };
  var renderOptions = function renderOptions(valueSources) {
    return valueSources.map(function (_ref2) {
      var _ref3 = _slicedToArray(_ref2, 2),
        srcKey = _ref3[0],
        info = _ref3[1];
      return /*#__PURE__*/React.createElement(FormControlLabel, {
        key: srcKey,
        value: srcKey,
        checked: valueSrc == srcKey || !valueSrc && srcKey == "value",
        control: /*#__PURE__*/React.createElement(Radio, null),
        label: info.label
      });
    });
  };
  var open = Boolean(anchorEl);
  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(IconButton, {
    size: "small",
    onClick: toggleOpenClose
  }, /*#__PURE__*/React.createElement(ExpandMoreSharpIcon, null)), /*#__PURE__*/React.createElement(Popover, {
    open: open,
    anchorEl: anchorEl,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: "left"
    },
    transformOrigin: {
      vertical: "top",
      horizontal: "left"
    },
    onClose: handleClose,
    sx: {
      padding: function padding(theme) {
        return theme.spacing(1);
      }
    },
    disablePortal: true
  }, /*#__PURE__*/React.createElement(FormControl, {
    component: "fieldset",
    sx: {
      p: 2
    }
  }, /*#__PURE__*/React.createElement(FormLabel, {
    component: "legend"
  }, title), /*#__PURE__*/React.createElement(RadioGroup, {
    value: valueSrc || "value",
    onChange: handleChange
  }, renderOptions(valueSources)))));
});