import _extends from "@babel/runtime/helpers/extends";
import React from "react";
import { DateTimePicker } from "@mui/x-date-pickers/DateTimePicker";
import FormControl from "@mui/material/FormControl";
import TextField from "@mui/material/TextField";
export default (function (props) {
  var value = props.value,
    setValue = props.setValue,
    use12Hours = props.use12Hours,
    readonly = props.readonly,
    placeholder = props.placeholder,
    dateFormat = props.dateFormat,
    timeFormat = props.timeFormat,
    valueFormat = props.valueFormat,
    customProps = props.customProps;
  var formatSingleValue = function formatSingleValue(value) {
    return value && value.isValid() ? value.format(valueFormat) : undefined;
  };
  var handleChange = function handleChange(value) {
    setValue(formatSingleValue(value));
  };
  var dateTimeFormat = dateFormat + " " + timeFormat;
  var renderInput = function renderInput(params) {
    return /*#__PURE__*/React.createElement(TextField, _extends({
      size: "small",
      variant: "standard"
    }, params));
  };
  return /*#__PURE__*/React.createElement(FormControl, null, /*#__PURE__*/React.createElement(DateTimePicker, _extends({
    readOnly: readonly,
    disabled: readonly,
    ampm: !!use12Hours,
    toolbarPlaceholder: !readonly ? placeholder : "",
    inputFormat: dateTimeFormat,
    value: value || null,
    onChange: handleChange,
    renderInput: renderInput
  }, customProps)));
});