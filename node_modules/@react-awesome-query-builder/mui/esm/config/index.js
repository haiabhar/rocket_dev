import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
import React from "react";
import MuiWidgets from "../widgets";
import { Utils, BasicConfig } from "@react-awesome-query-builder/ui";
var _Utils$ExportUtils = Utils.ExportUtils,
  SqlString = _Utils$ExportUtils.SqlString,
  stringifyForDisplay = _Utils$ExportUtils.stringifyForDisplay;
var MuiBooleanWidget = MuiWidgets.MuiBooleanWidget,
  MuiTextWidget = MuiWidgets.MuiTextWidget,
  MuiTextAreaWidget = MuiWidgets.MuiTextAreaWidget,
  MuiDateWidget = MuiWidgets.MuiDateWidget,
  MuiTimeWidget = MuiWidgets.MuiTimeWidget,
  MuiDateTimeWidget = MuiWidgets.MuiDateTimeWidget,
  MuiMultiSelectWidget = MuiWidgets.MuiMultiSelectWidget,
  MuiSelectWidget = MuiWidgets.MuiSelectWidget,
  MuiNumberWidget = MuiWidgets.MuiNumberWidget,
  MuiSliderWidget = MuiWidgets.MuiSliderWidget,
  MuiRangeWidget = MuiWidgets.MuiRangeWidget,
  MuiAutocompleteWidget = MuiWidgets.MuiAutocompleteWidget,
  MuiFieldSelect = MuiWidgets.MuiFieldSelect,
  MuiFieldAutocomplete = MuiWidgets.MuiFieldAutocomplete,
  MuiConjs = MuiWidgets.MuiConjs,
  MuiSwitch = MuiWidgets.MuiSwitch,
  MuiButton = MuiWidgets.MuiButton,
  MuiButtonGroup = MuiWidgets.MuiButtonGroup,
  MuiValueSources = MuiWidgets.MuiValueSources,
  MuiProvider = MuiWidgets.MuiProvider,
  MuiConfirm = MuiWidgets.MuiConfirm,
  MuiUseConfirm = MuiWidgets.MuiUseConfirm;
var settings = _objectSpread(_objectSpread({}, BasicConfig.settings), {}, {
  renderField: function renderField(props) {
    var _props$customProps;
    return props !== null && props !== void 0 && (_props$customProps = props.customProps) !== null && _props$customProps !== void 0 && _props$customProps.showSearch ? /*#__PURE__*/React.createElement(MuiFieldAutocomplete, props) : /*#__PURE__*/React.createElement(MuiFieldSelect, props);
  },
  renderOperator: function renderOperator(props) {
    return /*#__PURE__*/React.createElement(MuiFieldSelect, props);
  },
  renderFunc: function renderFunc(props) {
    return /*#__PURE__*/React.createElement(MuiFieldSelect, props);
  },
  renderConjs: function renderConjs(props) {
    return /*#__PURE__*/React.createElement(MuiConjs, props);
  },
  renderSwitch: function renderSwitch(props) {
    return /*#__PURE__*/React.createElement(MuiSwitch, props);
  },
  renderButton: function renderButton(props) {
    return /*#__PURE__*/React.createElement(MuiButton, props);
  },
  renderButtonGroup: function renderButtonGroup(props) {
    return /*#__PURE__*/React.createElement(MuiButtonGroup, props);
  },
  renderValueSources: function renderValueSources(props) {
    return /*#__PURE__*/React.createElement(MuiValueSources, props);
  },
  renderProvider: function renderProvider(props) {
    return /*#__PURE__*/React.createElement(MuiProvider, props);
  },
  renderConfirm: MuiConfirm,
  useConfirm: MuiUseConfirm
});
var widgets = _objectSpread(_objectSpread({}, BasicConfig.widgets), {}, {
  text: _objectSpread(_objectSpread({}, BasicConfig.widgets.text), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiTextWidget, props);
    }
  }),
  textarea: _objectSpread(_objectSpread({}, BasicConfig.widgets.textarea), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiTextAreaWidget, props);
    }
  }),
  number: _objectSpread(_objectSpread({}, BasicConfig.widgets.number), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiNumberWidget, props);
    }
  }),
  multiselect: _objectSpread(_objectSpread({}, BasicConfig.widgets.multiselect), {}, {
    factory: function factory(props) {
      return props.asyncFetch || props.showSearch ? /*#__PURE__*/React.createElement(MuiAutocompleteWidget, _extends({
        multiple: true
      }, props)) : /*#__PURE__*/React.createElement(MuiMultiSelectWidget, props);
    }
  }),
  select: _objectSpread(_objectSpread({}, BasicConfig.widgets.select), {}, {
    factory: function factory(props) {
      return props.asyncFetch || props.showSearch ? /*#__PURE__*/React.createElement(MuiAutocompleteWidget, props) : /*#__PURE__*/React.createElement(MuiSelectWidget, props);
    }
  }),
  slider: _objectSpread(_objectSpread({}, BasicConfig.widgets.slider), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiSliderWidget, props);
    }
  }),
  "boolean": _objectSpread(_objectSpread({}, BasicConfig.widgets["boolean"]), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiBooleanWidget, props);
    }
  }),
  date: _objectSpread(_objectSpread({}, BasicConfig.widgets.date), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiDateWidget, props);
    }
  }),
  time: _objectSpread(_objectSpread({}, BasicConfig.widgets.time), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiTimeWidget, props);
    }
  }),
  datetime: _objectSpread(_objectSpread({}, BasicConfig.widgets.datetime), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiDateTimeWidget, props);
    }
  }),
  rangeslider: {
    type: "number",
    jsType: "number",
    valueSrc: "value",
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(MuiRangeWidget, props);
    },
    valueLabel: "Range",
    valuePlaceholder: "Select range",
    valueLabels: [{
      label: "Number from",
      placeholder: "Enter number from"
    }, {
      label: "Number to",
      placeholder: "Enter number to"
    }],
    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {
      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);
    },
    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {
      return SqlString.escape(val);
    },
    singleWidget: "slider",
    toJS: function toJS(val, fieldSettings) {
      return val;
    }
  }
});
var types = _objectSpread(_objectSpread({}, BasicConfig.types), {}, {
  number: _objectSpread(_objectSpread({}, BasicConfig.types.number), {}, {
    widgets: _objectSpread(_objectSpread({}, BasicConfig.types.number.widgets), {}, {
      rangeslider: {
        opProps: {
          between: {
            isSpecialRange: true
          },
          not_between: {
            isSpecialRange: true
          }
        },
        operators: ["between", "not_between", "is_empty", "is_not_empty"]
      }
    })
  })
});
export default _objectSpread(_objectSpread({}, BasicConfig), {}, {
  types: types,
  widgets: widgets,
  settings: settings
});