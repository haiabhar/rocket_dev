import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
import BootstrapWidgets from "../widgets";
import { BasicConfig } from "@react-awesome-query-builder/ui";
import React from "react";
var BootstrapBooleanWidget = BootstrapWidgets.BootstrapBooleanWidget,
  BootstrapTextWidget = BootstrapWidgets.BootstrapTextWidget,
  BootstrapTextAreaWidget = BootstrapWidgets.BootstrapTextAreaWidget,
  BootstrapDateWidget = BootstrapWidgets.BootstrapDateWidget,
  BootstrapTimeWidget = BootstrapWidgets.BootstrapTimeWidget,
  BootstrapDateTimeWidget = BootstrapWidgets.BootstrapDateTimeWidget,
  BootstrapMultiSelectWidget = BootstrapWidgets.BootstrapMultiSelectWidget,
  BootstrapSelectWidget = BootstrapWidgets.BootstrapSelectWidget,
  BootstrapNumberWidget = BootstrapWidgets.BootstrapNumberWidget,
  BootstrapSliderWidget = BootstrapWidgets.BootstrapSliderWidget,
  BootstrapFieldSelect = BootstrapWidgets.BootstrapFieldSelect,
  BootstrapConjs = BootstrapWidgets.BootstrapConjs,
  BootstrapButton = BootstrapWidgets.BootstrapButton,
  BootstrapButtonGroup = BootstrapWidgets.BootstrapButtonGroup,
  BootstrapValueSources = BootstrapWidgets.BootstrapValueSources,
  BootstrapProvider = BootstrapWidgets.BootstrapProvider,
  BootstrapConfirm = BootstrapWidgets.BootstrapConfirm;
var settings = _objectSpread(_objectSpread({}, BasicConfig.settings), {}, {
  renderField: function renderField(props) {
    return /*#__PURE__*/React.createElement(BootstrapFieldSelect, props);
  },
  renderOperator: function renderOperator(props) {
    return /*#__PURE__*/React.createElement(BootstrapFieldSelect, props);
  },
  renderFunc: function renderFunc(props) {
    return /*#__PURE__*/React.createElement(BootstrapFieldSelect, props);
  },
  renderConjs: function renderConjs(props) {
    return /*#__PURE__*/React.createElement(BootstrapConjs, props);
  },
  renderButton: function renderButton(props) {
    return /*#__PURE__*/React.createElement(BootstrapButton, props);
  },
  renderButtonGroup: function renderButtonGroup(props) {
    return /*#__PURE__*/React.createElement(BootstrapButtonGroup, props);
  },
  renderValueSources: function renderValueSources(props) {
    return /*#__PURE__*/React.createElement(BootstrapValueSources, props);
  },
  renderProvider: function renderProvider(props) {
    return /*#__PURE__*/React.createElement(BootstrapProvider, props);
  },
  renderConfirm: BootstrapConfirm
});
var widgets = _objectSpread(_objectSpread({}, BasicConfig.widgets), {}, {
  text: _objectSpread(_objectSpread({}, BasicConfig.widgets.text), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapTextWidget, props);
    }
  }),
  textarea: _objectSpread(_objectSpread({}, BasicConfig.widgets.textarea), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapTextAreaWidget, props);
    }
  }),
  number: _objectSpread(_objectSpread({}, BasicConfig.widgets.number), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapNumberWidget, props);
    }
  }),
  multiselect: _objectSpread(_objectSpread({}, BasicConfig.widgets.multiselect), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapMultiSelectWidget, props);
    }
  }),
  select: _objectSpread(_objectSpread({}, BasicConfig.widgets.select), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapSelectWidget, props);
    }
  }),
  slider: _objectSpread(_objectSpread({}, BasicConfig.widgets.slider), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapSliderWidget, props);
    }
  }),
  "boolean": _objectSpread(_objectSpread({}, BasicConfig.widgets["boolean"]), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapBooleanWidget, props);
    }
  }),
  date: _objectSpread(_objectSpread({}, BasicConfig.widgets.date), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapDateWidget, props);
    }
  }),
  time: _objectSpread(_objectSpread({}, BasicConfig.widgets.time), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapTimeWidget, props);
    }
  }),
  datetime: _objectSpread(_objectSpread({}, BasicConfig.widgets.datetime), {}, {
    factory: function factory(props) {
      return /*#__PURE__*/React.createElement(BootstrapDateTimeWidget, props);
    }
  })
});
var types = _objectSpread({}, BasicConfig.types);
export default _objectSpread(_objectSpread({}, BasicConfig), {}, {
  types: types,
  widgets: widgets,
  settings: settings
});